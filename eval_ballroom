# Ballroom Dancing AI Microservice Challenge

## Introduction

In this challenge, you will design and develop a microservice that merges AI-driven technology with a ballroom dancing theme. Your task is to create a RESTful API, containerized with Docker, complemented by well-written tests and clear documentation.

### Key Requirements

- **Language**: Choose Golang, TypeScript, Java, or Rust.
- **API**: A single RESTful GET endpoint.
- **Docker**: Containerize the microservice.
- **Testing**: Implement at least one meaningful test.
- **Documentation**: Provide detailed instructions in `README.md`.

### The Challenge: AI & Dance Move Suggestions

Create a REST API with a single GET endpoint that suggests dance moves based on a dance style.

- **Endpoint**: `GET /suggest-dance-move/{style}`
  - **Response**: "For {style}, the recommended move is {dance_move}."

  - **Dance Move Suggestions**:
    - For `Waltz`, suggest moves like "Natural Turn" or "Whisk."
    - For `Tango`, suggest moves like "Corte" or "Promenade."
    - For `Foxtrot`, suggest moves like "Feather Step" or "Three Step."

### Docker

- Provide a Dockerfile to containerize the service.
- Include instructions for building and running the container.

### Testing

- Write a test to verify the API's functionality (e.g., test for a valid style input and correct move suggestions).
- Include clear instructions to run the test in the documentation.

### Documentation

Your `README.md` should cover:

1. Setup instructions.
2. Design rationale.
3. Example usage of the API.

## Evaluation Criteria

- **Code Quality**: Clean, efficient, maintainable code.
- **Functionality**: The API performs as expected.
- **Testing**: The test should be relevant and well-structured.
- **Documentation**: Clear and concise, covering all necessary steps.

## Bonus: Dance History

### Additional Task

Include a bonus endpoint that provides a brief history of the requested dance style.

- **New Endpoint**: `GET /dance-history/{style}`
  - Response could include a short history of the requested dance style.

### Documentation

Expand the `README.md` to include:

1. Explanation of the new `dance-history` endpoint.
2. Example responses for various dance styles.

## Submission

- Host your code on a public platform (e.g., GitHub).
- Ensure the repository is accessible for review.
- Alternatively, zip and send your archive to the email provided during your interview.
